using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using eDocCore.Domain.Entities;
using eDocCore.Domain.Interfaces;
using Microsoft.EntityFrameworkCore;

namespace eDocCore.Infrastructure.Persistence.Repositories
{
    public class DepartmentRepository : IDepartmentRepository
    {
        private readonly AppDbContext _dbContext;
        public DepartmentRepository(AppDbContext dbContext)
        {
            _dbContext = dbContext;
        }

        public async Task<Department?> GetByIdAsync(Guid id)
        {
            return await _dbContext.Departments.FindAsync(id);
        }

        public async Task<IReadOnlyList<Department>> GetAllAsync()
        {
            return await _dbContext.Departments.ToListAsync();
        }

        public async Task<Department> AddAsync(Department department)
        {
            _dbContext.Departments.Add(department);
            await _dbContext.SaveChangesAsync();
            return department;
        }

        public async Task UpdateAsync(Department department)
        {
            _dbContext.Departments.Update(department);
            await _dbContext.SaveChangesAsync();
        }

        public async Task DeleteAsync(Guid id)
        {
            var department = await _dbContext.Departments.FindAsync(id);
            if (department != null)
            {
                _dbContext.Departments.Remove(department);
                await _dbContext.SaveChangesAsync();
            }
        }
    }
}